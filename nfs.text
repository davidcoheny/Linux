At Backup server:
1. useradd USERXXXXXX
2. vi /etc/exports
3. exportfs -rav

At Client, CentOS 6:
1. Allow 82.166.147.242 , 10.180.111.111 , 82.166.147.252 , 10.180.111.113 in CSF and/or iptables
2. yum install nfs-utils autofs
3. chkconfig autofs on
4. ln -s /misc/backup /mnt/backup
5. add the next line to /etc/auto.misc
backup          -fstype=nfs,rw,soft,nfsvers=3,timeo=14,intr 82.166.147.242:/home/XXXXXXX
6. service autofs restart
7. ls -l /mnt/   and check if mounted correctly
8. After configuring the script DO NOT FORGET to run #chmod u+x backup.sh

At Client, CentOS 7:
1. Allow 82.166.147.242 , 10.180.111.111 , 82.166.147.252 , 10.180.111.113 in CSF (if cPanel)
2. yum install nfs-utils autofs
3. systemctl enable autofs.service
4. ln -s /misc/backup /mnt/backup
5. add the next line to /etc/auto.misc
backup          -fstype=nfs,rw,soft,nfsvers=3,timeo=14,intr 82.166.147.252:/home/XXXXXXX
6. systemctl restart autofs.service
7. ls -l /mnt/   and check if mounted correctly
8. After configuring the script DO NOT FORGET to run #chmod u+x backup.sh




Backup Script
===============
#!/bin/bash

USER="root"
PASSWORD="PASSWORD-HERE"
OUTPUTDIR="/root"
MYSQLDUMP="/usr/bin/mysqldump"
MYSQL="/usr/bin/mysql"

rm -f $OUTPUTDIR/*.backup.sql

# get a list of databases
databases=`$MYSQL --user=$USER --password=$PASSWORD -e "SHOW DATABASES" | tr -d "| " | grep -v Database | grep -v test | grep -v temp | grep -v schema | grep -v mysql`

# dump each database in turn
for db in $databases; do
    echo $db
    $MYSQLDUMP --force --opt --user=$USER --password=$PASSWORD \
    --databases $db > "$OUTPUTDIR/$db.backup.sql"
done

tar czf /mnt/backup/`date +"%Y-%m-%d_%H-%M-%S"`_SERVERNAME_backup.tar.gz /var/spool/cron /etc /root/*.backup.sql /var/www/html

find /mnt/backup/ -name '*SERVERNAME_backup.tar.gz' -mtime +7 -exec rm {} \;

exit 0

